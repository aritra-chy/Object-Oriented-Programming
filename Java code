class Beverage {
    protected String name;
    protected double price;

    public Beverage(String name, double price) {
        this.name = name;
        this.price = price;
    }
    public String getName() {
        return name;
    }
    public double getPrice() {
        return price;
    }
    @Override
    public String toString() {
        return name + " - $" + price;
}
}
class Coffee extends Beverage {
    public Coffee(String name, double price) {
        super(name, price);
    }
}
class Tea extends Beverage {
    public Tea(String name, double price) {
        super(name, price);
    }
}
import java.util.ArrayList;
import java.util.List;

class CoffeeShop {
    private String name;
    private List<Beverage> menu;
    private List<Customer> customers;

    public CoffeeShop(String name) {
        this.name = name;
        this.menu = new ArrayList<>();
        this.customers = new ArrayList<>();
    }

    public void addBeverage(Beverage beverage) {
        menu.add(beverage);
    }

    public void addCustomer(Customer customer) {
        customers.add(customer);
    }

    public void displayMenu() {
        System.out.println("Menu:");
        for (Beverage beverage : menu) {
            System.out.println(beverage);
        }
        System.out.println();
    }

    public Beverage searchBeverageByName(String beverageName) {
        for (Beverage beverage : menu) {
            if (beverage.getName().equals(beverageName)) {
                return beverage;
            }
        }
        return null;
    }

    public void serveBeverage(String beverageName, String customerName) {
        Beverage beverage = searchBeverageByName(beverageName);
        if (beverage.getName().equals(beverageName)) {
            for (Customer customer : customers) {
                if (customer.getName().equals(customerName)) {
                    customer.orderBeverage(beverage);
                    break;
                }
            }
    }
}

    public void displayCustomerOrders(String customerName) {
        for (Customer customer : customers) {
            if (customer.getName().equals(customerName)) {
                System.out.println("Orders for " + customerName + ":");
                for (Beverage beverage : customer.getOrderedBeverages()) {
                    System.out.println(beverage);
                }
                System.out.println();
                break;
            }
        }
    }
}
import java.util.ArrayList;
import java.util.List;

class Customer {
    private String name;
    private List<Beverage> orderedBeverages;

    public Customer(String name) {
        this.name = name;
        this.orderedBeverages = new ArrayList<>();
    }

    public String getName() {
        return name;
    }

    public List<Beverage> getOrderedBeverages() {
        return orderedBeverages;
    }

    public void orderBeverage(Beverage beverage) {
            orderedBeverages.add(beverage);
            System.out.println(name + " ordered: " + beverage.getName());
            
        System.out.println();
    }
}

public class CoffeeShopTest {
    public static void main(String[] args) {
        CoffeeShop coffeeShop = new CoffeeShop("Caffe 24");
        coffeeShop.addBeverage(new Coffee("Espresso", 5.0));
        coffeeShop.addBeverage(new Coffee("Latte", 3.0));
        coffeeShop.addBeverage(new Coffee("Cappuccino", 4.0));
        coffeeShop.addBeverage(new Tea("Green Tea", 2.0));
        coffeeShop.addBeverage(new Tea("Black Tea", 2.0));
        coffeeShop.addBeverage(new Beverage("Coca Cola", 1.0));

        coffeeShop.addCustomer(new Customer("Aritra"));
        coffeeShop.addCustomer(new Customer("Prottoy"));
        coffeeShop.addCustomer(new Customer("Arman"));
        coffeeShop.addCustomer(new Customer("Tamim"));
        coffeeShop.addCustomer(new Customer("Niloy"));

        coffeeShop.displayMenu();
        
        coffeeShop.serveBeverage("Espresso", "Aritra");
        coffeeShop.serveBeverage("Cappuccino", "Prottoy");
        coffeeShop.serveBeverage("Green Tea", "Arman");
        coffeeShop.serveBeverage("Coca Cola", "Tamim");
        coffeeShop.displayCustomerOrders("Aritra");
        coffeeShop.displayCustomerOrders("Prottoy");
        coffeeShop.displayCustomerOrders("Arman");
        coffeeShop.displayCustomerOrders("Tamim");
    }
}
